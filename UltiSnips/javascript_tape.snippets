priority -50

snippet tapebp "Tape boilerplate" b
import test from 'tape';

test('${1:module}', (t) => {
	$0
	t.end();
});
endsnippet

snippet tapet "Tape test" b
test('${1:module}', (t) => {
	$0
	t.end();
});
endsnippet

snippet tapes "Tape subtest" b
t.test('${1:description}', (q) => {
	$0
	q.end();
});
endsnippet

snippet teq "equals()" b
${1:t}.equals(${2:'actual'}, ${3:'expected'}, '${4:message}');
endsnippet

snippet tdeq "deepEqual()" b 
${1:t}.deepEqual(${2:'actual'}, ${3:'expected'}, '${4:message}');
endsnippet
