priority -49

snippet chaipro "Puts all requirements for Promise Testsuite" b
var chai = require('chai');
var expect = chai.expect;
var chaiAsPromised = require('chai-as-promised');
var sinonChai = require('sinon-chai');
var sinon = require('sinon');

chai.should();
chai.use(chaiAsPromised);
chai.use(sinonChai);

$0
endsnippet

snippet desc "describe" b
describe('${1:module}', () => {
	$0
});
endsnippet

snippet before "before" b
before(() => {
	$0
});
endsnippet

snippet beforeEach "beforeEach" b
beforeEach(() => {
	$0
});
endsnippet

snippet after "after" b
after(() => {
	$0
});
endsnippet

snippet afterEach "afterEach" b
afterEach(() => {
	$0
});
endsnippet

snippet ex "expect" b
expect(${1:value}).$0
endsnippet

snippet exin "expect include" b
expect(${1:value}).to.include(${2:value});
endsnippet

snippet extr "expect true" b
expect(${1:value}).to.be.true;
endsnippet

snippet exfa "expect false" b
expect(${1:value}).to.be.false;
endsnippet

snippet exun "expect undefined" b
expect(${1:value}).to.be.undefined;
endsnippet

snippet exnun "expect not undefined" b
expect(${1:value}).not.to.be.undefined;
endsnippet

snippet exnu "expect null" b
expect(${1:value}).to.be.null;
endsnippet

snippet exex "expect to exist" b
expect(${1:value}).to.exist;
endsnippet

snippet exem "expect to be empty" b
expect(${1:value}).to.be.empty;
endsnippet

snippet exok "expect ok" b
expect(${1:value}).to.be.ok;
endsnippet

snippet exeq "expect equal" b
expect(${1:value}).to.equal(${2:expected});
endsnippet

snippet exdeq "expect deep equal" b
expect(${1:value}).to.deep.equal(${2:expected});
endsnippet

snippet exle "expect length" b
expect(${1:value}).to.have.length(${2:number});
endsnippet

snippet expr "expect to have property" b
expect(${1:obj}).to.have.property('${2:prop}');
endsnippet

snippet exlt "expect to be below" b
expect(${1:obj}).to.be.below('${2:prop}');
endsnippet

snippet exgt "expect to be greater than" b
expect(${1:obj}).to.be.above('${2:prop}');
endsnippet

snippet exdpr "expect deep property" b
expect(${1:obj}).to.have.deep.property('${2:prop}');
endsnippet

snippet exhame "expect have members" b
expect(${1:value}).to.have.members(${2:arr});
endsnippet

snippet exinme "expect include members" b
expect(${1:value}).to.include.members(${2:arr});
endsnippet

snippet it "it" b
it('${1:should...}', () => {
	$0
});
endsnippet

snippet itdo "it async" b
it('${1:should...}', (done) => {
	$0
});
endsnippet
